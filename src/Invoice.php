<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace PropertyMeld\MeldAPI;

class Invoice 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * invoiceAttachmentRetrieve
     * 
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveRequest $request
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveSecurity $security
     * @return \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveResponse
     */
	public function invoiceAttachmentRetrieve(
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveRequest $request,
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveSecurity $security,
    ): \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v0.0.1/invoice/{id}/attachment/', \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options['headers']['Accept'] = '*/*';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \PropertyMeld\MeldAPI\Models\Operations\InvoiceAttachmentRetrieveResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * invoiceList
     * 
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceListRequest $request
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceListSecurity $security
     * @return \PropertyMeld\MeldAPI\Models\Operations\InvoiceListResponse
     */
	public function invoiceList(
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceListRequest $request,
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceListSecurity $security,
    ): \PropertyMeld\MeldAPI\Models\Operations\InvoiceListResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v0.0.1/invoice/');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\PropertyMeld\MeldAPI\Models\Operations\InvoiceListRequest::class, $request, null));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \PropertyMeld\MeldAPI\Models\Operations\InvoiceListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->paginatedMeldInvoiceSerializerListList = $serializer->deserialize((string)$httpResponse->getBody(), 'PropertyMeld\MeldAPI\Models\Shared\PaginatedMeldInvoiceSerializerListList', 'json');
            }
        }

        return $response;
    }
	
    /**
     * invoiceRetrieve
     * 
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveRequest $request
     * @param \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveSecurity $security
     * @return \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveResponse
     */
	public function invoiceRetrieve(
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveRequest $request,
        \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveSecurity $security,
    ): \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v0.0.1/invoice/{id}/', \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = sprintf('speakeasy-sdk/%s %s %s %s', $this->sdkConfiguration->language, $this->sdkConfiguration->sdkVersion, $this->sdkConfiguration->genVersion, $this->sdkConfiguration->openapiDocVersion);
        
        $client = Utils\Utils::configureSecurityClient($this->sdkConfiguration->defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \PropertyMeld\MeldAPI\Models\Operations\InvoiceRetrieveResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->meldInvoiceSerializerDetail = $serializer->deserialize((string)$httpResponse->getBody(), 'PropertyMeld\MeldAPI\Models\Shared\MeldInvoiceSerializerDetail', 'json');
            }
        }

        return $response;
    }
}